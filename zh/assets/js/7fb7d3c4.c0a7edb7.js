"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[282],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>v});var n=r(7294);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,c=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(r),f=c,v=p["".concat(l,".").concat(f)]||p[f]||h[f]||o;return r?n.createElement(v,a(a({ref:t},u),{},{components:r})):n.createElement(v,a({ref:t},u))}));function v(e,t){var r=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=r.length,a=new Array(o);a[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:c,a[1]=i;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8565:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(7462),c=(r(7294),r(3905));const o={title:"Architecture Overview",slug:"/architecture-overview"},a=void 0,i={unversionedId:"architecture/architecture-overview",id:"architecture/architecture-overview",title:"Architecture Overview",description:"chia-architecture",source:"@site/docs/architecture/architecture-overview.md",sourceDirName:"architecture",slug:"/architecture-overview",permalink:"/zh/architecture-overview",draft:!1,editUrl:"https://github.com/Chia-Network/chia-docs/blob/main/docs/architecture/architecture-overview.md",tags:[],version:"current",frontMatter:{title:"Architecture Overview",slug:"/architecture-overview"},sidebar:"tutorialSidebar",previous:{title:"CLVM vs EVM",permalink:"/zh/clvm-vs-evm"},next:{title:"Full Nodes",permalink:"/zh/full-node-architecture"}},l={},s=[],u={toc:s},p="wrapper";function h(e){let{components:t,...o}=e;return(0,c.kt)(p,(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"chia-architecture",src:r(9877).Z,width:"1613",height:"1350"})),(0,c.kt)("p",null,"The above diagram shows Chia's network architecture. A single machine can run more than one of these processes. In fact, the default configuration is to run four processes together: Farmer, Full Node, Harvester, and Wallet. Many farmers will also choose to run the Electron GUI and Pool processes. Additionally, a few farmers, especially those with multi-PiB farms, will choose to run a Timelord."),(0,c.kt)("p",null,"Let's discuss each of these processes, and the protocols that connect them, separately."))}h.isMDXComponent=!0},9877:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/chia-network-architecture-8069f322a3b7e4ff7f79f137ea76b48d.png"}}]);