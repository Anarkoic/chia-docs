"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[1068],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),h=n,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||o;return a?r.createElement(m,i(i({ref:t},p),{},{components:a})):r.createElement(m,i({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},8928:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={slug:"/custody/prefarm-audit-tutorial",title:"Prefarm Audit Tutorial"},i=void 0,l={unversionedId:"guides/custody/prefarm-audit",id:"guides/custody/prefarm-audit",title:"Prefarm Audit Tutorial",description:"Chia Network Inc's prefarm is secured by a complex set of custodial rules. This document describes how to use the custody tool to audit the prefarm configuration. A moderate level of technical proficiency is probably needed to understand the details. For a high-level overview of the prefarm custody wallets, see our blog post.",source:"@site/docs/guides/custody/prefarm-audit.md",sourceDirName:"guides/custody",slug:"/custody/prefarm-audit-tutorial",permalink:"/zh/custody/prefarm-audit-tutorial",draft:!1,editUrl:"https://github.com/Chia-Network/chia-docs/blob/main/docs/guides/custody/prefarm-audit.md",tags:[],version:"current",frontMatter:{slug:"/custody/prefarm-audit-tutorial",title:"Prefarm Audit Tutorial"},sidebar:"guides",previous:{title:"Custody Tool User Guide",permalink:"/zh/guides/custody-tool-user-guide"},next:{title:"WalletConnect User Guide",permalink:"/zh/walletconnect-user-guide"}},s={},c=[{value:"Prefarm Audit with the Internal Custody Tool",id:"prefarm-audit-with-the-internal-custody-tool",level:2},{value:"Prefarm Audit with Block Records",id:"prefarm-audit-with-block-records",level:2},{value:"Further reading",id:"further-reading",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...o}=e;return(0,n.kt)(u,(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Chia Network Inc's prefarm is secured by a complex set of custodial rules. This document describes how to use the custody tool to audit the prefarm configuration. A moderate level of technical proficiency is probably needed to understand the details. For a high-level overview of the prefarm custody wallets, see our ",(0,n.kt)("a",{parentName:"p",href:"https://www.chia.net/2022/10/29/a-new-home-for-the-prefarm/"},"blog post"),"."),(0,n.kt)("p",null,"Other relevant documents:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{target:"_blank",href:a(1846).Z},"Flow chart")," to visualize how the custody tool works"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/guides/custody-tool-user-guide"},"User guide")," to help you get up and running"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/custody-tool"},"CLI reference")," for all custody commands used in this tutorial"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Chia-Network/prefarm-alert"},"Prefarm Alert Tool")," to access the public prefarm config files")),(0,n.kt)("h2",{id:"prefarm-audit-with-the-internal-custody-tool"},"Prefarm Audit with the Internal Custody Tool"),(0,n.kt)("p",null,"The following steps assume that you have installed and setup the custody tool following the ",(0,n.kt)("a",{parentName:"p",href:"/guides/custody-tool-user-guide"},"User guide"),". "),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Download the prefarm configuration files from the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Chia-Network/prefarm-alert/tree/main/singleton-metadata"},"Prefarm Alert Tool"),"."),(0,n.kt)("li",{parentName:"ol"},"Run the custody tool command ",(0,n.kt)("inlineCode",{parentName:"li"},"cic sync -c <config-file-path>.txt -db <unique_db_path>.sqlite"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"(venv) cic sync -c .\\prefarm_configs\\cold-us-public-config.txt -db .\\sync_cold_us.sqlite\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"NOTE: This command has no result if completed successfully, but, you will see the corresponding sqlite file created.")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Show details of the associated singleton by running ",(0,n.kt)("inlineCode",{parentName:"li"},"cic show -c -db <unique_db_path>.sqlite"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"(venv) cic show -c -db ./sync_cold_us.sqlite\n\nCurrent time: 1696970325 (10/10/2023, 13:38:45)\n\nConfig up to date: True\n\nSingleton:\n  - launcher ID: 6c77dce3c3bab525dab7883e8ad513a8f3ff127e872009b12836cbb1c8f26647\n  - amount left: 0\n  - amount to claim: 9187500100033000911\n\nOutstanding events:\n  PAYMENTS:\n  REKEYS:\n\nConfig:\n - current root: 9ab73274c5ca6cd0250b7b6b0352ad3190593bdb8f312d8aff3636c95208b0fb\n - withdrawal timelock: 2592000 seconds\n - payment clawback period: 7776000 seconds\n - rekey cancellation period: 5184000 seconds\n - rekey penalty: 1296000 seconds\n - slow rekey timelock: 3888000 seconds\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"This command shows the singleton launcher ID and the parameters associated with this specific prefarm wallet configuration (withdrawal, clawback, and cancellation periods).")),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Show the singleton p2 address by running ",(0,n.kt)("inlineCode",{parentName:"li"},"cic p2_address -db <unique_db_path>.sqlite"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cic p2_address -db .\\sync_cold_us.sqlite\n\nxch1jj0gm4ahhlu3ke0r0fx955v8axr6za7rzz6hc0y26lewa7zw6fws5nwvv6\n")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"prefarm-audit-with-block-records"},"Prefarm Audit with Block Records"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"NOTE: A high level of technical proficiency is needed to understand the details of this manual process for what the cic tool does above.\nThis process is a high-level guide and does not display expected results for each step.\nThe ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Chia-Network/chia-dev-tools#install"},"chia-dev-tools")," are needed for this audit.")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Use the internal custody tool to reveal the current root and other curried parameters (steps 1-4 above)."),(0,n.kt)("li",{parentName:"ol"},"Curry the necessary parameters into the prefarm_inner.clsp ",(0,n.kt)("inlineCode",{parentName:"li"},"(THIS_MOD_HASH, ROOT, STATE)"),":",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"THIS_MOD_HASH")," = this code's sha256 tree hash without its curried arguments."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"ROOT")," = the current root provided by the internal custody tool."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"STATE")," = a tree with the following elements in order ",(0,n.kt)("inlineCode",{parentName:"li"},"((REKEY_MOD_HASH . ACH_MOD_HASH) . (ACH_TIMELOCK . (BASE_REKEY_TIMELOCK . SLOW_REKEY_PENALTY)))"),":",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"REKEY_MOD_HASH")," = rekey puzzle sha256 tree hash without its curried arguments."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"ACH_MOD_HASH")," = ach puzzle sha256 tree hash without its curried arguments."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"ACH_TIMELOCK")," = integer of the ach timelock also referred to as the Withdrawal Timelock."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"BASE_REKEY_TIMELOCK")," = integer of the rekey timelock."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"SLOW_REKEY_PENALTY")," = integer of the slow rekey penalty."))))),(0,n.kt)("li",{parentName:"ol"},"Curry the necessary parameters into singleton_top_layer_v1_1.clsp ",(0,n.kt)("inlineCode",{parentName:"li"},"(SINGLETON_STRUCT INNER_PUZZLE)"),":",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"SINGLETON_STRUCT")," = a tree with the following elements in order ",(0,n.kt)("inlineCode",{parentName:"li"},"(MOD_HASH . (LAUNCHER_ID . LAUNCHER_PUZZLE_HASH))"),":",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"MOD_HASH")," = singleton_top_layer puzzle sha256 tree hash without its curried arguments."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"LAUNCHER_ID")," = the ID of the singleton we are committed to paying."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"LAUNCHER_PUZZLE_HASH")," = the puzzle hash of the launcher."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"INNER_PUZZLE")," = the compiled form of the inner puzzle (result of the previous curry)."))),(0,n.kt)("li",{parentName:"ol"},"Derive the puzzle hash from the compiled form of the singleton.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"opc -H <compiled_puzzle>\n")),(0,n.kt)("ol",{start:5},(0,n.kt)("li",{parentName:"ol"},"Convert the puzzle hash into the singleton p2 puzzle by currying the necessary parameters ",(0,n.kt)("inlineCode",{parentName:"li"},"(SINGLETON_MOD_HASH, LAUNCHER_ID, LAUNCHER_PUZZLE_HASH)"),":",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"SINGLETON_MOD_HASH")," - singleton_top_layer puzzle sha256 tree hash without its curried arguments ."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"LAUNCHER_ID")," - the ID of the singleton we are committed to paying."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"LAUNCHER_PUZZLE_HASH")," - the puzzle hash of the launcher."))),(0,n.kt)("li",{parentName:"ol"},"Encode the singleton p2 puzzle to reveal the p2 address.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cdv encode -p xch <singleton_p2_puzzle>\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"NOTE: This is the address used when sending funds to the vault.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"further-reading"},"Further reading"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.chia.net/2022/10/29/a-new-home-for-the-prefarm/"},"A New Home for the Prefarm blog")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.chia.net/2023/01/17/cypherpunks-in-sportcoats-chias-custody-is-a-killer-app/"},"Cypherpunks in Sportcoats: Blockchain in the Real World"))))}d.isMDXComponent=!0},1846:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/files/chia-custody-tool-5e6e2f18e8f98c0faaf11bdf5fea5971.png"}}]);