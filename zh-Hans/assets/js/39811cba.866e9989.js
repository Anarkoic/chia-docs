"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[4625],{8063:(n,o,e)=>{e.r(o),e.d(o,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=e(5893),i=e(1151);const s={title:"\u533a\u5757\u683c\u5f0f",slug:"/block-format"},r=void 0,a={id:"block-validation/block-format",title:"\u533a\u5757\u683c\u5f0f",description:"\u5b8c\u6574\u5757",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/block-validation/block-format.md",sourceDirName:"block-validation",slug:"/block-format",permalink:"/zh-Hans/block-format",draft:!1,unlisted:!1,editUrl:"https://github.com/Chia-Network/chia-docs/blob/main/docs/block-validation/block-format.md",tags:[],version:"current",frontMatter:{title:"\u533a\u5757\u683c\u5f0f",slug:"/block-format"},sidebar:"tutorialSidebar",previous:{title:"Light Clients",permalink:"/zh-Hans/light-clients"},next:{title:"Block Rewards",permalink:"/zh-Hans/block-rewards"}},l={},c=[{value:"\u5b8c\u6574\u5757",id:"\u5b8c\u6574\u5757",level:2}];function h(n){const o={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h2,{id:"\u5b8c\u6574\u5757",children:"\u5b8c\u6574\u5757"}),"\n",(0,t.jsxs)(o.p,{children:["\u5b8c\u6574\u5757\u662f\u4e00\u4e2a\u5305\u542b\u9a8c\u8bc1\u548c\u6dfb\u52a0\u533a\u5757\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5305\u542b\u4e86\u5728 ",(0,t.jsx)(o.code,{children:"N - 1"})," \u9ad8\u5ea6\u524d\u6240\u6709\u533a\u5757\u90fd\u5df2\u6dfb\u52a0\u7684\u57fa\u7840\u4e0a\uff0c\u9a8c\u8bc1\u5e76\u6dfb\u52a0\u9ad8\u5ea6\u4e3a ",(0,t.jsx)(o.code,{children:"N"}),"\u7684\u533a\u5757\u6240\u9700\u7684\u4fe1\u606f\u3002 \u5b8c\u6574\u5757\u5747\u901a\u8fc7\u7f51\u7edc\u534f\u8bae\u53d1\u9001\uff0c\u6709\u65f6\u4e3a\u4e86\u540e\u7eed\u5411\u5176\u4ed6\u8282\u70b9\u63d0\u4f9b\u670d\u52a1\uff0c\u4e5f\u4f1a\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u3002"]}),"\n",(0,t.jsxs)(o.p,{children:["\u5b8c\u6574\u5757\u62e5\u6709\u533a\u5757\u94fe\u7684trunk\u548cfoliage\u7684\u5168\u90e8\u5b57\u6bb5\u3002 ",(0,t.jsx)(o.code,{children:"header_hash"}),"\u88ab\u7528\u4f5c\u533a\u5757\u6807\u8bc6\u7b26\uff0c \u662f\u4ee5\u53ef\u6d41\u5f0f\u4f20\u8f93\u7684\u683c\u5f0f\u4f53\u73b0\u7684 ",(0,t.jsx)(o.code,{children:"foliage"})," \u5b57\u6bb5\u7684\u54c8\u5e0c\u503c(\u89c1 ",(0,t.jsx)(o.a,{href:"/serialization-protocol",children:"\u5e8f\u5217\u5316\u534f\u8bae"}),")\u3002 \u8fd9\u6837\u4fbf\u4ee5\u786e\u4fdd\u5f53\u524d\u533a\u5757\u548c\u524d\u5e8f\u533a\u5757\u7684\u6570\u636e\u4e0d\u88ab\u7be1\u6539\u3002"]}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"finished_sub_sots"}),": List[EndOfSubSlotBundle]: This contains all sub-slots that have been completed since the previous block in the chain (block ",(0,t.jsx)(o.code,{children:"N-1"}),")."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"reward_chain_block"}),": RewardChainBlock: This is trunk data for the reward chain and challenge chain, including vdf outputs and proof of space."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"challenge_chain_sp_proof"}),": Optional[VDFProof]: Proof of the VDF for the challenge chain signage point, not provided for the first signage point, since that is and end of sub slot."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"challenge_chain_ip_proof"})," VDFProof: VDF proof from the previous cc infusion, up the infusion point."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"reward_chain_sp_proof"}),": Optional[VDFProof]: Proof of the VDF for the reward chain signage point, not provided for the first signage point, since that is and end of sub slot."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"reward_chain_ip_proof"})," VDFProof: VDF proof from the previous rc infusion, up to the infusion point."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"infused_challenge_chain_ip_proof"}),": Optional[VDFProof]: The ICC proof, only present if deficit < 16"]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"foliage"}),": Foliage: Foliage data for the reward chain block, the hash of this is the ",(0,t.jsx)(o.code,{children:"header_hash"}),"."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"foliage_transaction_block"}),": Optional[FoliageTransactionBlock]: Transaction related metadata that is relevant for light clients (not actual transactions), only for tx blocks."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"transactions_info"}),": Optional[TransactionsInfo]: Transaction related metadata that is not relevant for light clients (not actual transactions), only for tx blocks."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"transactions_generator"}),": Optional[SerializedProgram]: A clvm program that generates all transactions (spends)."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"transactions_generator_ref_list"}),": List[uint32]: A list of block heights of previous generators referenced by this block's generator."]}),"\n"]})]})}function d(n={}){const{wrapper:o}={...(0,i.a)(),...n.components};return o?(0,t.jsx)(o,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}},1151:(n,o,e)=>{e.d(o,{Z:()=>a,a:()=>r});var t=e(7294);const i={},s=t.createContext(i);function r(n){const o=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(o):{...o,...n}}),[o,n])}function a(n){let o;return o=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),t.createElement(s.Provider,{value:o},n.children)}}}]);